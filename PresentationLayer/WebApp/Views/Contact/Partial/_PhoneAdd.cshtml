@model Phonebook.PresentationLayer.Web.Models.PhoneModel
@using Phonebook.BusinessLogicLayer.Managers;

@using (Html.BeginForm("AddPhone", "PhoneDetails", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    Model.ParseIds = Model.Id + "/" + Model.Contact.Id + "/" + Model.Country.Id;
    @Html.HiddenFor(x => Model.ParseIds)
    <div class="info-table add-phone" style="display:none;">
        <div>
            @Html.EditorFor(x => x.Number, new { htmlAttributes = new { @class = "no-borders", required = "required", min = "10" } })
            @Html.ValidationMessageFor(x => x.Number)
        </div>
        <div>
            @{
                PhoneTypes phoneTypesManager = new PhoneTypes();
                IEnumerable<PhoneTypeModel> phoneTypes = phoneTypesManager.GetAll().Select(x => (PhoneTypeModel)x);
                var phoneTypesList = new SelectList(phoneTypes, "Id", "Name", Model.PhoneType?.Id);
            }
            @Html.DropDownListFor(x => x.PhoneType.Id, phoneTypesList, "None", new { @class = "no-borders-drop" })
            @Html.ValidationMessageFor(x => x.PhoneType.Name)
        </div>
        <div>
            @{
                Countries countriesManager = new Countries();
                IEnumerable<CountryModel> countries = countriesManager.GetAll().Select(x => (CountryModel)x);
            }
            @Html.DropDownListFor(x => x.Country.Id, new SelectList(countries, "Id", "Name", Model.Country.Id), new { @class = "no-borders-drop" })
            @Html.ValidationMessageFor(x => x.Country.Name)
        </div>
        <div>
            <input type="submit" value="Save" class="btn btn-success btn-xs">
        </div>

    </div>
    <button type="button" class="btn btn-block btn-default add-phone-button">Add new phone</button>
                }
